JAVASCRIPT XML...class to className ...etc...33:00


############################
vanila........js

const h1 = document.createElement('h1')
h1.textContent = "This is an imperative way to program" 
h1.className = "header" 

console.log(h1)

.....................OUTPUT....................
// <h1 class = "header" >


############################
JSX............................
const element =  <h1 className="header"> This is my JSX</h1>
console.log(element)

.....................OUTPUT....................
/*
{
    key: null,
props: {className: 'header', children: ' This is my JSX'},
ref: null,
type: "h1"
}
*/

############################
This mean jsx is creating js objects
-the object describes the DOM element that we want react to put onto the page 


############################
NB...In JSX ..we need to make sure we are returning a single 
	parent element

example....h1 and div are both siblings ... no parent 
ReactDOM.render(
   <h1></h1><div></div>
 ,document.getElementById('root')
    )

Rather do it like this 
...now div is the parent of h1 ... ...now div is the parent we are returning 
ReactDOM.render(
  <div> <h1></h1></div>
 ,document.getElementById('root')
    )
############################

Nb...you can save a whole parent element as a variable and then pass to the ReactDOM

var element =  <div> <h1>this is variable</h1></div>


ReactDOM.render(
 element 
 ,document.getElementById('root')
    )

############################
var content = <div><h1>Hello </h1><p>chris</p></div>

function H(){
    return(
        content
    )
}
ReactDOM.render(
  <H/>,
document.getElementById("root")
)

challenge
